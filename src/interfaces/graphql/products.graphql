type ProductOption {
    productOptionName: String!
    productOptionPrice: Int!
    ordering: Int!
}

type ProductOptionGroup {
    productOptionGroupName: String!
    ordering: Int!
    productOptionList: [ProductOption]
}

type Product {
    productName: String!
    productCode: String!
    productPrice: Int!
    status: String!
    productOptionGroupList: [ProductOptionGroup]
}

type Query{
    getProduct(productCode: String!): Product
}

input CreateProduct {
    productName: String!
    productCode: String!
    productPrice: Int!
    productOptionGroupList: [CreateProductOptionGroup]!
}

input CreateProductOptionGroup {
    productOptionGroupName: String!
    ordering: String!
    productOptionList: Int!
    productOptionGroupList: [CreateProductOption]!
}

input CreateProductOption {
    productOptionName: String!
    productOptionPrice: String!
    ordering: Int!
}

type Mutation{
    registerProduct(dto: CreateProduct): Product
}